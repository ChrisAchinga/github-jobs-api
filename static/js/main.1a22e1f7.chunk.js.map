{"version":3,"sources":["components/useFetchJobs.js","components/Job.js","components/JobsPagination.js","components/SearchForm.js","App.js","index.js"],"names":["ACTIONS","BASE_URL","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","Job","job","useState","open","setOpen","Card","className","Body","Title","title","company","Subtitle","Date","created_at","toLocaleDateString","Badge","variant","location","style","wordBreak","source","how_to_apply","height","alt","src","company_logo","Text","Button","onClick","prevOpen","Collapse","in","description","JobsPagination","page","setPage","adjustPage","amount","prevPage","Pagination","Prev","Item","Ellipsis","active","Next","SearchForm","params","onParamChange","Form","Row","Group","as","Col","Label","Control","onChange","value","name","placeholder","xs","Check","full_time","id","label","App","setParams","useReducer","dispatch","useEffect","cancelToken1","axios","CancelToken","get","cancelToken","token","markdown","then","res","data","catch","e","isCancel","cancelToken2","length","cancel","useFetchJobs","Container","param","target","prevParams","disabled","size","block","Spinner","animation","role","aria-hidden","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a22e1f7.chunk.js","sourcesContent":["import { useReducer, useEffect } from 'react'\nimport axios from 'axios'\n\nconst ACTIONS = {\n  MAKE_REQUEST: 'make-request',\n  GET_DATA: 'get-data',\n  ERROR: 'error',\n  UPDATE_HAS_NEXT_PAGE: 'update-has-next-page'\n}\n\nconst BASE_URL = 'https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json'\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.MAKE_REQUEST:\n      return { loading: true, jobs: [] }\n    case ACTIONS.GET_DATA:\n      return { ...state, loading: false, jobs: action.payload.jobs }\n    case ACTIONS.ERROR:\n      return { ...state, loading: false, error: action.payload.error, jobs: [] }\n    case ACTIONS.UPDATE_HAS_NEXT_PAGE:\n      return { ...state, hasNextPage: action.payload.hasNextPage }\n    default:\n      return state\n  }\n}\n\nexport default function useFetchJobs(params, page) {\n  const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true })\n\n  useEffect(() => {\n    const cancelToken1 = axios.CancelToken.source()\n    dispatch({ type: ACTIONS.MAKE_REQUEST })\n    axios.get(BASE_URL, {\n      cancelToken: cancelToken1.token,\n      params: { markdown: true, page: page, ...params }\n    }).then(res => {\n      dispatch({ type: ACTIONS.GET_DATA, payload: { jobs: res.data } }) \n    }).catch(e => {\n      if (axios.isCancel(e)) return\n      dispatch({ type: ACTIONS.ERROR, payload: { error: e } }) \n    })\n\n    const cancelToken2 = axios.CancelToken.source()\n    axios.get(BASE_URL, {\n      cancelToken: cancelToken2.token,\n      params: { markdown: true, page: page + 1, ...params }\n    }).then(res => {\n      dispatch({ type: ACTIONS.UPDATE_HAS_NEXT_PAGE, payload: { hasNextPage: res.data.length !== 0 } }) \n    }).catch(e => {\n      if (axios.isCancel(e)) return\n      dispatch({ type: ACTIONS.ERROR, payload: { error: e } }) \n    })\n\n    return () => {\n      cancelToken1.cancel()\n      cancelToken2.cancel()\n    }\n  }, [params, page])\n  \n  return state\n}","import React, { useState } from 'react'\nimport { Card, Badge, Button, Collapse } from 'react-bootstrap'\nimport ReactMarkdown from 'react-markdown'\n\nconst Job = ({ job }) => {\n  const [open, setOpen] = useState(false)\n\n  return (\n    <Card className=\"mb-3\">\n      <Card.Body>\n        <div className=\"d-flex justify-content-between\">\n          <div>\n            <Card.Title>\n              {job.title} - <span className=\"text-muted font-weight-light\">{job.company}</span>\n            </Card.Title>\n            <Card.Subtitle className=\"text-muted mb-2\">\n              {new Date(job.created_at).toLocaleDateString()}\n            </Card.Subtitle>\n            <Badge variant=\"secondary\" className=\"mr-2\">{job.type}</Badge>\n            <Badge variant=\"secondary\">{job.location}</Badge>\n            <div style={{ wordBreak: 'break-all' }}>\n              <ReactMarkdown source={job.how_to_apply} />\n            </div>\n          </div>\n          <img className=\"d-none d-md-block\" height=\"50\" alt={job.company} src={job.company_logo} />\n        </div>\n        <Card.Text>\n          <Button\n            onClick={() => setOpen(prevOpen => !prevOpen)}\n            variant=\"primary\"\n          >\n            {open ? 'Hide Details' : 'View Details'}\n          </Button>\n        </Card.Text>\n        <Collapse in={open}>\n          <div className=\"mt-4\">\n            <ReactMarkdown source={job.description} />\n          </div>\n        </Collapse>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default Job\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\n\nconst JobsPagination = ({ page, setPage, hasNextPage }) => {\n  function adjustPage(amount) {\n    setPage(prevPage => prevPage + amount)\n  }\n\n  return (\n    <Pagination>\n      {page !== 1 && <Pagination.Prev onClick={() => adjustPage(-1)} />}\n      {page !== 1 && <Pagination.Item onClick={() => setPage(1)}>1</Pagination.Item>}\n      {page > 2 && <Pagination.Ellipsis />}\n      {page > 2 && <Pagination.Item onClick={() => adjustPage(-1)}>{page - 1}</Pagination.Item>}\n      <Pagination.Item active>{page}</Pagination.Item>\n      {hasNextPage && <Pagination.Item onClick={() => adjustPage(1)}>{page + 1}</Pagination.Item>}\n      {hasNextPage && <Pagination.Next onClick={() => adjustPage(1)} />}\n    </Pagination>\n  )\n}\n\nexport default JobsPagination\n","import React from \"react\";\nimport { Form, Col } from \"react-bootstrap\";\n\nconst SearchForm = ({ params, onParamChange }) => {\n  return (\n    <Form className=\"mb-4\">\n      <Form.Row className=\"align-items-end\">\n        <Form.Group as={Col}>\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            onChange={onParamChange}\n            value={params.description}\n            name=\"description\"\n            type=\"text\"\n            placeholder=\"language, stack ...\"\n          />\n        </Form.Group>\n        <Form.Group as={Col}>\n          <Form.Label>Location</Form.Label>\n          <Form.Control\n            onChange={onParamChange}\n            value={params.location}\n            name=\"location\"\n            type=\"text\"\n            placeholder=\"remote, name of a place\"\n          />\n        </Form.Group>\n        <Form.Group as={Col} xs=\"auto\" className=\"ml-2\">\n          <Form.Check\n            onChange={onParamChange}\n            value={params.full_time}\n            name=\"full_time\"\n            id=\"full-time\"\n            label=\"Only Full Time\"\n            type=\"checkbox\"\n            className=\"mb-2\"\n          />\n        </Form.Group>\n      </Form.Row>\n    </Form>\n  );\n}\n\nexport default SearchForm\n","import React, { useState } from 'react'\nimport { Container, Spinner, Button } from 'react-bootstrap'\n\n// components\nimport useFetchJobs from './components/useFetchJobs'\nimport Job from './components/Job'\nimport JobsPagination from './components/JobsPagination'\nimport SearchForm from './components/SearchForm'\n\nconst App = () => {\n  const [params, setParams] = useState({})\n  const [page, setPage] = useState(1)\n  const { jobs, loading, error, hasNextPage } = useFetchJobs(params, page)\n\n  const handleParamChange = (e) => {\n    const param = e.target.name\n    const value = e.target.value\n    setPage(1)\n    setParams((prevParams) => {\n      return { ...prevParams, [param]: value }\n    })\n  }\n\n  return (\n    <Container className='my-4'>\n      <h1 className='mb-4'>Developer Jobs</h1>\n      <SearchForm params={params} onParamChange={handleParamChange} />\n      <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n      {loading && (\n        <Button variant='outline-success' disabled size='lg' block className='mb-3'>\n          <Spinner\n            as='span'\n            animation='grow'\n            variant='success'\n            size='sm'\n            role='status'\n            aria-hidden='true'\n          />\n          Gathering Avaliable Jobs\n        </Button>\n      )}\n      {error && (\n        <Button variant='outline-warning' size='lg' block className='mb-3'>\n          <p>sorry, kindly refresh or check your internet connection</p>\n        </Button>\n      )}\n      {jobs.map((job) => {\n        return <Job key={job.id} job={job} />\n      })}\n      <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n    </Container>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport './styles/styles.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}